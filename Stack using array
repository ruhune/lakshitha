#include <iostream>

using namespace std;

#define MAX_SIZE 10

class Stack {
  private:
    int top;
    int arr[MAX_SIZE];
  public:
    Stack() {
      top = -1;
    }
    bool isEmpty() {
      return (top == -1);
    }
    bool isFull() {
      return (top == MAX_SIZE - 1);
    }
    void push(int value) {
      if (isFull()) {
        cout << "Stack Overflow" << endl;
        return;
      }
      top++;
      arr[top] = value;
    }
    void pop() {
      if (isEmpty()) {
        cout << "Stack Underflow" << endl;
        return;
      }
      top--;
    }
    int topvalue() {
      if (isEmpty()) {
        cout << "Stack is empty" << endl;
        return -1;
      }
      return arr[top];
    }
};

int main() {
  Stack myStack;
  myStack.push(5);
  myStack.push(10);
  myStack.push(15);
  myStack.push(30);
  myStack.pop();
  cout << myStack.topvalue() << endl;
  return 0;
}
